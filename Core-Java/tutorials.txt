create classes shapes , circle , line , star where shapes class is a base class.

create draw method in shapes and override draw method in all child classes.

com.seclore.factory
create ShapeFactory class with drawshape method which return the specific shape object

create main and accept the choice from user 
1. Circle
2.Line
3.Star

call the draw method of selected shape using polymorphism.

_____________________________________________________________________________


1. A common place to buy candy is from a machine. The machine sells candies, chips, gum, and cookies. You have been asked to write a program for this candy machine.
The program should do the following:
1. Show the customer the different products sold by the candy machine.
2. Let the customer make the selection.
3. Show the customer the cost of the item selected.
4. Accept money from the customer.
5. Release the item.

The machine has two main components: a built-in cash register and several dispensers to hold and release the products.

Define class cashRegister in Java with the following descriptions :
Private Members:
cashOnHand of type integer
Public Members:
A default constructor cashRegister() sets the cash in the register to 500.
A constructor cashRegister(int) sets the cash in the register to a specific amount.
A function getCurrentBalance() which returns value of cashOnHand
A function acceptAmount(int) to receive the amount deposited by the customer and update the amount in the register

Define class dispenserType in C++ with the following descriptions :
Private Members:
numberOfItems of type integer
cost of type integer
Public Members:
A default constructor dispenserType () sets the cost and number of items in the dispenser to 50 each.
A constructor dispenserType (int,int) sets the cost and number of items in the dispenser to the values specified by the user.
A function getNoOfItems() to return the value of numberOfItems.
A function getCost() to return the value of cost.
A function makeSale() to reduce the number of items by 1.

When the program executes, it must do the following:
1. Show the different products sold by the candy machine.
2. Show how to select a particular product.
Once the user has made the appropriate selection, the candy machine must act accordingly. If the user has opted to buy a product and that product is available, the candy machine should show the cost of the product and ask the user to deposit the money. If the amount deposited is at least the cost of the item, the candy machine should sell the item and display an appropriate message.
Divide this program into three functions: showSelection, sellProduct, and main.
The function sellProduct must have access to the dispenser holding the product (to decrement the number of items in the dispenser by 1 and to show the cost of the item) as well as the cash register (to update the cash). Therefore, this function has two parameters: one corresponding to the dispenser and the other corresponding to the cash register.

----------------------------------------------------------------------


Messenger App
Your application is divided into three parts
1. Client -> main method
2. Application class -> will call the pojo and other classes
3. Pojo classes -> POJO and business logic 

We have to create the messaging app which allow you
to send messages in specific type.
Available type : 1. SMS message 2. Email 3.Courier 



allow user to make a choice to send message by providing  option to choose the message type where inputs are ::  to (address) and message body

i.e. method :: sendMessage(String to , String message)

Note : Your application have to accept changes. in case of new type of message is introduce in 
future there should be no issues to intigrate the same.

classes
com.seclore.pojo
	all types of messages - classes
	SMSMessage
	{
		public void sendMessage(String to , String message)
		{
			sysout("sending SMS Message to :: "+ to);
			Sysout("Message :: "+ message);
		}
	}
com.seclore.application
	MessengerApp
com.seclore.main
	MessengerMain -> accept to--> and message--> 	
-------------------------------------------------------------------------------------

create online exam application using XML-DOM and Collections/Array 
where application will fetch questions and its options are from xml file.
display the result at the end of the exam.
  





